<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css">
  <link rel="stylesheet" href="/stylesheets/style.css" />
  <script src="https://cdn.jsdelivr.net/npm/markdown-it@14.1.0/dist/markdown-it.min.js"></script>
</head>

<body>
  <div class="container">
    <h1>Career Counsellor</h1>

    <div class="grid">
      <% ["Software Developer", "Data Scientist", "Project Manager"].forEach(job => { %>
      <input type="button" class="predefined-job-title" value="<%= job %>" data-job-title="<%= job %>" />
      <% }) %>
    </div>
    <div class="mb-3">
      <form role="search" id="job-search-form">
        <input type="search" name="jobTitle" placeholder="Or search other job" aria-label="Search" />
        <input type="submit" value="Search" />
      </form>

      <nav aria-label="breadcrumb">
        <ul>
          <li>
            <a class="nav-link active" href="#job-overview">Overview</a>
          </li>
          <li>
            <a href="#personalize-form-wrapper">Personalize</a>
          </li>
          <li>
            <a href="#personalized-steps">Your Personalized Path</a>
          </li>
        </ul>
      </nav>
    </div>

    <div class="mb-3" id="job-overview" hidden>
      <div class="content"></div>
      <button id="show-personalize-form-btn" class="btn btn-secondary">
        Personalize these results
      </button>
    </div>

    <!-- hidden -->
    <div class="mb-3" id="personalize-form-wrapper">
      <form class="" id="personalize-form">
        <div class="mb-3">
          <label for="educationLevel" class="form-label">What is your current level of education?</label>
          <select class="form-select" id="educationLevel" name="educationLevel">
            <option value="" selected>Select your education level</option>
            <% ["High School Diploma","Associate's Degree","Bachelor's Degree", "Master's Degree", "Doctorate"].forEach(item=> { %>
            <option value="<%= item %>">
              <%= item %>
            </option>
            <% }) %>
          </select>
        </div>

        <div class="mb-3">
          <label class="form-label">Are you switching careers?</label>
          <div class="form-check">
            <label class="form-check-label"><input class="form-check-input" type="checkbox" name="careerChange" value="yes" /> Yes</label>
          </div>
        </div>

        <div class="mb-3">
          <label for="currentJob" class="form-label">What is your current job?</label>
          <input type="text" class="form-control" name="currentJob" id="currentJob" placeholder="Enter your current job role" />
        </div>

        <div class="mb-3">
          <label for="learningStyle" class="form-label">How do you prefer to learn new skills?</label>
          <select class="form-select" id="learningStyle" name="learningStyle">
            <option value="" selected>Select your learning style</option>
            <% ["Online Courses","In-person Classes","Bootcamps","Self-taught"].forEach(function(item,index){ %>
            <option value="<%= item %>">
              <%= item %>
            </option>
            <% }) %>
          </select>
        </div>

        <div class="mb-3">
          <label class="form-label">How much time can you dedicate to learning new skills?</label>
          <% ["Full-time", "Part-time" , "Weekends Only" ].forEach(item=> { %>
          <div class="form-check">
            <label class="form-check-label"><input class="form-check-input" type="radio" name="timeCommitment" value="<%= item %>" />
              <%= item %>
            </label>
          </div>
          <% }) %>
        </div>

        <div class="mb-3">
          <label class="form-label">How many years from now would you like to start working in this
            field?</label>
          <input type="number" class="form-control" id="autoSizingInputGroup" min="0" name="timeline" placeholder="Years" />
        </div>
    </div>

    <div class="col-auto">
      <button type="submit" class="btn btn-primary">
        View personalized career path
      </button>
    </div>
    <input type="hidden" name="jobOverviewMd" id="job-overview-md" />
    </form>
  </div>

  <div class="mb-3" id="personalized-steps" hidden>
    <div class="content"></div>
    <button id="send-email-btn" class="btn btn-secondary">
      <i class="bi bi-envelope me-2"></i>Send to self
    </button>
    <button id="download-btn" class="btn btn-secondary">
      <i class="bi bi-download me-2"></i>Download
    </button>
  </div>
  </div>
  <h1>
    <%= title %>
  </h1>
  <p>Welcome to <%= title %>
  </p>
  <!-- <p id="current-chat" data-messages=""></p>
  <button class="btn btn-primary" id="fetch-btn">Fetch</button> -->

  <script>
    const md = markdownit();
    const queries = new Set();

    const jobSearchForm = document.getElementById('job-search-form')
    const predefinedJobTitleBtns = document.querySelectorAll(".predefined-job-title");
    const jobOverview = document.getElementById("job-overview");
    const jobOverviewContent = jobOverview.querySelector(".content");
    const personalizedSteps = document.getElementById("personalized-steps");
    const personalizedStepsContent =
      personalizedSteps.querySelector(".content");
    const showPersonalizeFormBtn = document.getElementById(
      "show-personalize-form-btn"
    );

    const personalizeFormWrapper = document.getElementById(
      "personalize-form-wrapper"
    );
    const personalizeForm = document.getElementById("personalize-form");
    let selectedJob = "";

    const jobOverviewMd = document.getElementById("job-overview-md");

    predefinedJobTitleBtns.forEach((btn) => {
      btn.addEventListener("click", () => {
        jobOverviewContent.innerText = "";
        jobOverview.setAttribute("hidden", 1);
        handleInitialJobSearch(btn.getAttribute("data-job-title"));
      });
    });

    jobSearchForm.addEventListener('submit', (e) => {
      e.preventDefault()
      const formData = new FormData(e.target)
      const jobTitle = formData.get('jobTitle');
      console.log({
        jobTitle
      });

      // handleInitialJobSearch(jobTitle);
    })

    showPersonalizeFormBtn.addEventListener("click", () => {
      personalizeFormWrapper.removeAttribute("hidden");
    });

    personalizeForm.addEventListener("submit", (e) => {
      e.preventDefault();
      personalizedSteps.setAttribute("hidden", 1);
      handlePersonalizeFormSubmit();
    });

    async function handleInitialJobSearch(jobTitle) {
      console.log({
        jobTitle
      });

      return;

      postData("/job-overview", {
          jobTitle: "Dental Surgeon"
        }) //job-overview  /test-chat
        .then((response) => {
          console.log("Success:", response);
          jobOverviewMd.value = response;
          const html = md.render(response);

          jobOverviewContent.innerHTML = html;
          jobOverview.removeAttribute("hidden");
          selectedJob = jobTitle;
          queries.add(jobTitle.toLowerCase());
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }

    function handlePersonalizeFormSubmit(params) {
      const formData = new FormData(personalizeForm);
      const formDataObj = {};
      for (const [key, value] of formData.entries()) {
        formDataObj[key] = value;
      }
      console.log(formDataObj);

      return;

      postData("/personalized-path", formDataObj)
        .then((response) => {
          console.log("Success:", response);
          const html = md.render(response);

          personalizedStepsContent.innerHTML = html;
          personalizedSteps.removeAttribute("hidden");
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }

    async function postData(url = "", data = {}) {
      try {
        const response = await fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const textResponse = await response.text();

        return textResponse;
      } catch (error) {
        console.error("Error posting data:", error);
        throw error;
      }
    }
  </script>
</body>

</html>
